version: "2"
services:
  geo:
    build: .
    image: hotel_reserv_geo_single_node
    entrypoint: geo
    container_name: 'hotel_reserv_geo'
    ports:
      - "8083:8083"
    depends_on:
      - mongodb-geo
      #- consul
    restart: always
    cpuset: "0"

  rate:
    build: .
    image: hotel_reserv_rate_single_node
    entrypoint: rate
    container_name: 'hotel_reserv_rate'
    ports:
      - "8084:8084"
    depends_on:
      - mongodb-rate
      - memcached-rate
      #- consul
    restart: always
    cpuset: "0"

  recommendation:
    build: .
    image: hotel_reserv_recommend_single_node
    entrypoint: recommendation
    container_name: 'hotel_reserv_recommendation'
    ports:
      - "8085:8085"
    depends_on:
      - mongodb-recommendation
      #- consul
    restart: always
    cpuset: "0"

  memcached-rate:
    image: memcached
    # hostname: user-memcached
    container_name: 'hotel_reserv_rate_mmc'
    ports:
      - 11212:11211
    restart: always
    environment:
      - MEMCACHED_CACHE_SIZE=128
      - MEMCACHED_THREADS=2
    logging:
      options:
        max-size: 50m
    cpuset: "0"

  mongodb-geo:
    image: mongo
    container_name: 'hotel_reserv_geo_mongo'
    # hostname: geo-db
    ports:
      - "27018:27017"
    restart: always
    cpuset: "0"
    volumes:
      - geo:/data/db

  mongodb-rate:
    image: mongo
    container_name: 'hotel_reserv_rate_mongo'
    hostname: rate-db
    ports:
      - "27020:27017"
    restart: always
    cpuset: "0"
    volumes:
      - rate:/data/db

  mongodb-recommendation:
    image: mongo
    hostname: recommendation-db
    container_name: 'hotel_reserv_recommendation_mongo'
    ports:
      - "27021:27017"
    restart: always
    cpuset: "0"
    volumes:
      - recommendation:/data/db

volumes:
  geo:
  rate:
  recommendation:

networks:
  default:
    external:
      name: hotelReservation